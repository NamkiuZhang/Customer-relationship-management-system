package com.crm.service.impl;

import java.io.Serializable;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.springframework.beans.BeanUtils;

import com.crm.dao.IClientDao;
import com.crm.dao.impl.ClientDao4Orcl;
import com.crm.po.Client;
import com.crm.service.IClientService;
import com.crm.util.Page;
import com.crm.vo.ClientLostVo;
import com.crm.vo.ClientVo;

public class ClientService implements IClientService {

	private IClientDao clientDao;


	public IClientDao getClientDao() {
		return clientDao;
	}

	public void setClientDao(IClientDao clientDao) {
		this.clientDao = clientDao;
	}

	public Page findall(int pageSize, int page) {
        String hql="FROM Client";
		int allRow = clientDao.getAllRowCount(hql);// �ܼ�¼��
		
		int totalPage = Page.countTotalPage(pageSize, allRow);// ��ҳ��
		final int offset = Page.countOffset(pageSize, page);// ��ǰҳ��ʼ��¼
		final int length = pageSize;// ÿҳ��¼��
	
		final int currentPage = Page.countCurrentPage(page);
		List<Client> list = clientDao.findall(offset, length);// "һҳ"�ļ�¼
		System.out.println(list.size());
		System.out.println("cccccccc");
		// �ѷ�ҳ��Ϣ���浽Bean��
		Page pageBean = new Page();
		pageBean.setPageSize(pageSize);
		pageBean.setCurrentPage(currentPage);
		pageBean.setAllRow(allRow);
		pageBean.setTotalPage(totalPage);
		pageBean.setList(list);
		pageBean.init();
		return pageBean;
	}

	public Serializable addClient(Client client) {
		Serializable s=clientDao.addClient(client);
		return s;
	}

	public void delClient(long clientid) {	
		clientDao.delClient(clientid);
	}

	public void modClient(Client client) {
		clientDao.modClient(client);	
	}

	public List getRegions() {
		List<Map> l=clientDao.getRegion();
	    List<String[]> os=new ArrayList();   
		for(Map m:l){
			String s1=m.get("0")==null?"无地区":m.get("0").toString();
			String s2=m.get("1")==null?"无地区":m.get("1").toString();
			String[] s={s1,s2};
			os.add(s);
		}
		return os;
	}

	private List<ClientLostVo> findlostClient() {
		List<Map> lsList=clientDao.findlostClient();
		List<ClientLostVo> cvos = new ArrayList<ClientLostVo>();
		ClientLostVo cvo=new ClientLostVo();
		for(Map m:lsList){
			Date date=new Date();		
			DateFormat fmt =new SimpleDateFormat("yyyy-MM-dd"); 
			Date date2;
			try {
				if(m.get("0")!=null){
				date2 = fmt.parse(m.get("0").toString());
				int differ=(int) ((date.getTime()-date2.getTime())/(24*60*60*1000));
				if(differ>=170){

					Client c=clientDao.getbyname(m.get("1").toString());
					cvo=p2v(c);		
					String lasttime = new SimpleDateFormat("yyyy-MM-dd").format(date2);
					System.out.println(lasttime);
					cvo.setLasttime(lasttime);
					cvos.add(cvo);
				}
				}
			} catch (ParseException e) {
				e.printStackTrace();
			}
			
		}

		return cvos;
	}
	private ClientLostVo p2v(Client c){
		ClientLostVo clvo=new ClientLostVo();
		BeanUtils.copyProperties(c, clvo);
		return clvo;
	}

	private ClientVo cp2v(Client c){
		ClientVo cvo=new ClientVo();
		BeanUtils.copyProperties(c, cvo);
		return cvo;
	}
	public Client getbyid(long cid) {
		return clientDao.getbyid(cid);
	}

	public Page findlostClient(int pageSize, int page) {
		List<ClientLostVo> cVos=findlostClient();
		List<ClientLostVo> list=new ArrayList<ClientLostVo>();
			int allRow = cVos.size();// �ܼ�¼��
			
			int totalPage = Page.countTotalPage(pageSize, allRow);// ��ҳ��
			final int offset = Page.countOffset(pageSize, page);// ��ǰҳ��ʼ��¼
			final int length = pageSize;// ÿҳ��¼��
		
			final int currentPage = Page.countCurrentPage(page);
			if(offset+length>cVos.size())
				 list=cVos;
			else
			 list= cVos.subList(offset, offset+length);
			// �ѷ�ҳ��Ϣ���浽Bean��
			Page pageBean = new Page();
			pageBean.setPageSize(pageSize);
			pageBean.setCurrentPage(currentPage);
			pageBean.setAllRow(allRow);
			pageBean.setTotalPage(totalPage);
			pageBean.setList(list);
			pageBean.init();
			return pageBean;
	}

	public ClientVo getByName(String name) {
		Client client=clientDao.getbyname(name);
		return cp2v(client);
	}
}
